[{"/Users/qizhen/Desktop/tys_fe/src/index.js":"1","/Users/qizhen/Desktop/tys_fe/src/App.js":"2","/Users/qizhen/Desktop/tys_fe/src/redux/store.js":"3","/Users/qizhen/Desktop/tys_fe/src/components/Booking.js":"4","/Users/qizhen/Desktop/tys_fe/src/components/StudentHome.js":"5","/Users/qizhen/Desktop/tys_fe/src/components/Public.js":"6","/Users/qizhen/Desktop/tys_fe/src/components/TutorRegister.js":"7","/Users/qizhen/Desktop/tys_fe/src/components/StudentConsultations.js":"8","/Users/qizhen/Desktop/tys_fe/src/components/PaperStart.js":"9","/Users/qizhen/Desktop/tys_fe/src/components/TutorConsultations.js":"10","/Users/qizhen/Desktop/tys_fe/src/components/PaperQuestions.js":"11","/Users/qizhen/Desktop/tys_fe/src/components/StudentRegister.js":"12","/Users/qizhen/Desktop/tys_fe/src/components/PaperReview.js":"13","/Users/qizhen/Desktop/tys_fe/src/redux/UserReducer.js":"14","/Users/qizhen/Desktop/tys_fe/src/components/StudentNavBar.js":"15","/Users/qizhen/Desktop/tys_fe/src/components/TutorNavBar.js":"16","/Users/qizhen/Desktop/tys_fe/src/components/StudentProfile.js":"17"},{"size":266,"mtime":1644204909778,"results":"18","hashOfConfig":"19"},{"size":1718,"mtime":1644309748462,"results":"20","hashOfConfig":"19"},{"size":192,"mtime":1644127844216,"results":"21","hashOfConfig":"19"},{"size":1360,"mtime":1644125133539,"results":"22","hashOfConfig":"19"},{"size":4214,"mtime":1644334106844,"results":"23","hashOfConfig":"19"},{"size":3709,"mtime":1644314130727,"results":"24","hashOfConfig":"19"},{"size":7612,"mtime":1644287870032,"results":"25","hashOfConfig":"19"},{"size":1667,"mtime":1644121797046,"results":"26","hashOfConfig":"19"},{"size":1300,"mtime":1644309264889,"results":"27","hashOfConfig":"19"},{"size":1503,"mtime":1644127440681,"results":"28","hashOfConfig":"19"},{"size":4314,"mtime":1644337203507,"results":"29","hashOfConfig":"19"},{"size":9484,"mtime":1644296114751,"results":"30","hashOfConfig":"19"},{"size":2673,"mtime":1644383333234,"results":"31","hashOfConfig":"19"},{"size":2421,"mtime":1644303976849,"results":"32","hashOfConfig":"19"},{"size":2349,"mtime":1644292293796,"results":"33","hashOfConfig":"19"},{"size":1406,"mtime":1644148751787,"results":"34","hashOfConfig":"19"},{"size":194,"mtime":1644309720413,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"h5n9u",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/qizhen/Desktop/tys_fe/src/index.js",[],["78","79"],"/Users/qizhen/Desktop/tys_fe/src/App.js",[],"/Users/qizhen/Desktop/tys_fe/src/redux/store.js",[],"/Users/qizhen/Desktop/tys_fe/src/components/Booking.js",[],"/Users/qizhen/Desktop/tys_fe/src/components/StudentHome.js",["80","81","82"],"//NEED TO GET THE STUDENTS' PAPERS\n//CAN SAVE THE PAPER_ID TO THE STATE TO KNOW WHAT PAPER WE ARE DOING\n\nimport React, { useEffect, useState } from \"react\";\nimport StudentNavBar from \"./StudentNavBar\";\nimport {\n  Box,\n  ListItemText,\n  ListSubheader,\n  ListItemButton,\n  Collapse,\n} from \"@mui/material\";\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSlider } from \"@mui/base\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst StudentHome = () => {\n  const user = useSelector((state) => state.user);\n  const [relevantPapers, setRelevantPapers] = useState([]);\n  useEffect(() => {\n    axios\n      .get(`http://127.0.0.1:8000/students/login_papers/${user.username}/`)\n      .then((res) => {\n        setRelevantPapers(res.data);\n      });\n  }, []);\n  console.log(relevantPapers);\n  const donePapers = {};\n  const toDoPapers = {};\n  for (const paper of relevantPapers) {\n    if (paper.completed === true) {\n      const subject = paper.paper_id.split(\"_\")[1];\n      if (subject in donePapers) {\n        donePapers[subject].push(paper.paper_id);\n      } else {\n        donePapers[subject] = [paper.paper_id];\n      }\n    } else {\n      const subject = paper.paper_id.split(\"_\")[1];\n      if (subject in toDoPapers) {\n        toDoPapers[subject].push(paper.paper_id);\n      } else {\n        toDoPapers[subject] = [paper.paper_id];\n      }\n    }\n  }\n  console.log(donePapers, toDoPapers);\n\n  //create array of states depending on number of subjects x2\n  const [open, setOpen] = useState([false]);\n  const handleClick = (sequence) => {\n    const initial = open[sequence];\n    const updated = [...open];\n    updated[sequence] = !initial;\n    setOpen([...updated]);\n  };\n  const examPapers = () => {\n    return Object.keys(toDoPapers).map((subject, index) => (\n      <>\n        <ListItemButton\n          onClick={() => {\n            handleClick(index);\n          }}\n        >\n          <ListItemText primary={subject} />\n          {open[index] ? <ExpandLess /> : <ExpandMore />}\n        </ListItemButton>\n        <Collapse in={open[index]}>\n          {toDoPapers[subject].map((element) => {\n            return (\n              <ListItemText sx={{ pl: 4 }}>\n                <Link to={`/student/${element}`}>{element.split(\"_\")[2]}</Link>\n              </ListItemText>\n            );\n          })}\n        </Collapse>\n      </>\n    ));\n  };\n  const completedPapers = () => {\n    return Object.keys(donePapers).map((subject, index) => (\n      <>\n        <ListItemButton\n          onClick={() => {\n            handleClick(index + user.subjects.length);\n          }}\n        >\n          <ListItemText primary={subject} />\n          {open[index + user.subjects.length] ? <ExpandLess /> : <ExpandMore />}\n        </ListItemButton>\n        <Collapse in={open[index + user.subjects.length]}>\n          {donePapers[subject].map((element) => {\n            return (\n              <ListItemText sx={{ pl: 4 }}>\n                <Link to={`/student/${element}/review`}>{element.split(\"_\")[2]}</Link>\n              </ListItemText>\n            );\n          })}\n        </Collapse>\n      </>\n    ));\n  };\n\n  return (\n    <div>\n      <StudentNavBar />\n      <p>Welcome, {user.f_name}</p>\n      <div\n        className=\"all-papers\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Box\n          sx={{\n            width: \"100%\",\n            height: \"500px\",\n            maxWidth: 300,\n            bgcolor: \"background.paper\",\n            margin: \"20px\",\n          }}\n        >\n          <ListSubheader sx={{ backgroundColor: \"black\", color: \"white\" }}>\n            Practice Papers\n          </ListSubheader>\n          {examPapers()}\n        </Box>\n        <Box\n          sx={{\n            width: \"100%\",\n            height: \"500px\",\n            maxWidth: 300,\n            bgcolor: \"white\",\n            margin: \"20px\",\n          }}\n        >\n          <ListSubheader sx={{ backgroundColor: \"black\", color: \"white\" }}>\n            Completed Papers\n          </ListSubheader>\n          {completedPapers()}\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nexport default StudentHome;\n","/Users/qizhen/Desktop/tys_fe/src/components/Public.js",["83"],"//authenticate log in\n//retrieve student profile from database\n//set user state from student profile\n\nimport React, { useState } from \"react\";\nimport { Grid, TextField, Container, Button } from \"@mui/material\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../redux/UserReducer\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // const user = useSelector((state) => state.user);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    if (username[0] === \"s\") {\n      const res = await axios.post(\"http://127.0.0.1:8000/students/login/\", {\n        username: username,\n        password: password,\n      });\n      console.log(res.data);\n      dispatch(userActions.setAccessToken(res.data));\n      console.log(typeof username);\n      //i'm assuming this only happens after the above lines\n      const student = await axios.get(\n        `http://127.0.0.1:8000/students/profile/${username}/`\n      );\n      console.log(student.data);\n      dispatch(userActions.loginSuccess(student.data))\n      history.push(\"/student\");\n    } else if (username[0] === \"t\") {\n      const res = await axios.post(\"http://127.0.0.1:8000/tutors/login/\", {\n        username: username,\n        password: password,\n      });\n      console.log(res.data);\n      dispatch(userActions.setAccessToken(res.data));\n      const tutor = await axios.get(\n        `http://127.0.0.1:8000/tutors/profile/${username}/`,\n        {\n          username: username,\n        }\n      );\n      console.log(tutor);\n    }\n  };\n  return (\n    <>\n      <header\n        style={{\n          backgroundColor: \"black\",\n          color: \"white\",\n          textAlign: \"center\",\n          padding: \"3vh\",\n          marginBottom: \"5vh\",\n          height: \"10vh\",\n        }}\n      >\n        TYS - LOG IN\n      </header>\n      <div className=\"main\" style={{ textAlign: \"center\" }}>\n        <form>\n          <Container sx={{ marginTop: \"10px\" }} maxWidth=\"sm\">\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  value={username}\n                  onChange={handleUsernameChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  value={password}\n                  onChange={handlePasswordChange}\n                />\n              </Grid>\n              <Grid container justifyContent=\"center\" sx={{ margin: \"20px\" }}>\n                <Button variant=\"outlined\" color=\"inherit\" onClick={handleLogin}>\n                  Log In\n                </Button>\n              </Grid>\n            </Grid>\n          </Container>\n        </form>\n        Don't have an account with us yet?\n        <br />\n        Register <Link to=\"/student/register\">here for students</Link>, and{\" \"}\n        <Link to=\"/tutor/register\">here for tutors</Link>.\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","/Users/qizhen/Desktop/tys_fe/src/components/TutorRegister.js",[],"/Users/qizhen/Desktop/tys_fe/src/components/StudentConsultations.js",[],"/Users/qizhen/Desktop/tys_fe/src/components/PaperStart.js",["84","85","86","87"],"//JUST RETRIEVE THE PAPER TITLE FROM THE PAPER_ID\n\nimport React, { useEffect, useState } from \"react\";\nimport StudentNavBar from \"./StudentNavBar\";\nimport { Button, Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst PaperStart = () => {\n  const [paper, setPaper] = useState({});\n  const params = useParams();\n  const history = useHistory()\n\n  // useEffect(() => {\n  //   const getPaper = async () => {\n  //     const res = await axios.get(\"http://127.0.0.1:8000/papers/all/\");\n  //     console.log(res.data[0]);\n  //     setPaper(res.data[0]);\n  //   };\n  //   getPaper();\n  // }, []);\n\n  const handleStart = (e) => {\n    e.preventDefault();\n    history.push(`/student/${params.paper}/questions`)\n  };\n\n  return (\n    <>\n      <StudentNavBar />\n      <div\n        style={{\n          textAlign: \"center\",\n          marginTop: \"30vh\",\n          marginBottom: \"50px\",\n          fontWeight: \"bold\",\n        }}\n      >\n        {params.paper.split(\"_\")[0]} {params.paper.split(\"_\")[1]}{\" \"}\n        {params.paper.split(\"_\")[2]}\n      </div>\n      <Box textAlign=\"center\">\n        <Button variant=\"outlined\" color=\"inherit\" onClick={handleStart}>\n          START\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default PaperStart;\n","/Users/qizhen/Desktop/tys_fe/src/components/TutorConsultations.js",["88"],"import React from \"react\";\nimport TutorNavBar from \"./TutorNavBar\";\nimport { Box, Button } from \"@mui/material\";\n\nconst TutorConsultations = () => {\n  return (\n    <>\n      <TutorNavBar />\n      <Box\n        className=\"upcoming\"\n        sx={{\n          p: 2,\n          border: \"1px solid grey\",\n          marginTop: \"50px\",\n          borderRadius: \"10px\",\n          width: \"600px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n        }}\n      >\n        <p style={{ textDecoration: \"underline\", fontWeight: \"bold\" }}>\n          Upcoming Consultations\n        </p>\n        <ul>\n          <li>\n            27th August 11am\n            <span style={{ float: \"right\" }}>\n              <Button variant=\"outlined\" size=\"small\">\n                START\n              </Button>\n            </span>\n          </li>\n        </ul>\n      </Box>\n      <Box\n        className=\"past\"\n        sx={{\n          p: 2,\n          border: \"1px solid grey\",\n          marginTop: \"50px\",\n          borderRadius: \"10px\",\n          width: \"600px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n        }}\n      >\n        <p style={{ textDecoration: \"underline\", fontWeight: \"bold\" }}>\n          Past Consultations\n        </p>\n        <ul>\n          <li>\n            27th August 11am\n            <span style={{ float: \"right\", fontSize: \"small\" }}>\n              <a href=\"\">REVIEW</a>\n            </span>\n          </li>\n        </ul>\n      </Box>\n    </>\n  );\n};\n\nexport default TutorConsultations;\n","/Users/qizhen/Desktop/tys_fe/src/components/PaperQuestions.js",["89","90","91","92","93"],"import {\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Button,\n  Grid,\n} from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport StudentNavBar from \"./StudentNavBar\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst PaperQuestions = () => {\n  const user = useSelector((state) => state.user);\n  const params = useParams();\n  const history = useHistory();\n\n  //get the paper questions ordered by question number\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/papers/${params.paper}/`).then((res) => {\n      console.log(res.data);\n      setQuestions(res.data);\n    });\n  }, []);\n\n  //print the questions and save the solutions\n  const [answers, setAnswers] = useState([]);\n  const printQuestions = questions.map((question, index) => {\n    return (\n      <li style={{ marginBottom: \"10px\" }}>\n        <img\n          src={`${question.question_img}`}\n          alt={`question ${index + 1}`}\n          style={{ width: \"60%\" }}\n        />\n        <RadioGroup\n          row\n          onChange={(e) => {\n            e.preventDefault();\n            const currentAnswers = [...answers];\n            currentAnswers[index] = e.target.value;\n            setAnswers(currentAnswers);\n            console.log(answers);\n          }}\n        >\n          <FormControlLabel\n            value=\"A\"\n            control={<Radio size=\"small\" />}\n            label=\"A\"\n          />\n          <FormControlLabel\n            value=\"B\"\n            control={<Radio size=\"small\" />}\n            label=\"B\"\n          />\n          <FormControlLabel\n            value=\"C\"\n            control={<Radio size=\"small\" />}\n            label=\"C\"\n          />\n          <FormControlLabel\n            value=\"D\"\n            control={<Radio size=\"small\" />}\n            label=\"D\"\n          />\n        </RadioGroup>\n      </li>\n    );\n  });\n  console.log(questions);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    history.push(`/student/${params.paper}/review`);\n    //get the right answers\n    const solutions = [];\n    questions.map((question) => {\n      solutions.push(question.answer);\n    });\n    //marking\n    const marking = [];\n    for (let i = 0; i < solutions.length; i++) {\n      marking.push(solutions[i] === answers[i]);\n    }\n    const accuracy =\n      marking.filter((element) => element === true).length / marking.length;\n    console.log(accuracy);\n    //update review database\n    const updateForReview = async (\n      username,\n      paper_id,\n      question_number,\n      question_img,\n      answer,\n      student_answer,\n      accuracy,\n      solution\n    ) => {\n      await axios.post(\"http://localhost:8000/students/papers/review/\", {\n        username: username,\n        paper_id: paper_id,\n        question_number: question_number,\n        question_img: question_img,\n        answer: answer,\n        student_answer: student_answer,\n        accuracy: accuracy,\n        solution: solution,\n      });\n    };\n    questions.map((question, index) => {\n      updateForReview(\n        user.username,\n        question.paper_id,\n        question.question_number,\n        question.question_img,\n        question.answer,\n        answers[index],\n        marking[index],\n        question.solution\n      );\n    });\n    //update the students papers table\n    const update = await axios.put(\n      `http://127.0.0.1:8000/students/papers/submit/${user.username}/${params.paper}/`,\n      {\n        results: accuracy,\n      }\n    );\n  };\n  return (\n    <>\n      <StudentNavBar />\n      <div\n        style={{\n          textAlign: \"center\",\n          margin: \"50px\",\n          fontWeight: \"bold\",\n          display: \"sticky\",\n        }}\n      >\n        {params.paper.split(\"_\")[0]} {params.paper.split(\"_\")[1]}{\" \"}\n        {params.paper.split(\"_\")[2]}\n      </div>\n\n      <div className=\"questions\">\n        <ol>{printQuestions}</ol>\n      </div>\n      <Grid container justifyContent=\"center\">\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          onClick={handleSubmit}\n          disabled={answers.length < questions.length}\n        >\n          Submit\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nexport default PaperQuestions;\n","/Users/qizhen/Desktop/tys_fe/src/components/StudentRegister.js",["94","95","96"],"//add user to database\n//add user relevant papers to database\n\nimport React, { useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  MenuItem,\n  Container,\n  IconButton,\n  Button,\n  InputAdornment,\n} from \"@mui/material\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../redux/UserReducer\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst StudentRegister = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const schools = [\n    { value: \"Anglican_High_School\", label: \"Anglican High School\" },\n  ];\n  const subjectOptions = [\n    { value: \"Biology\", label: \"Biology\" },\n    { value: \"Chemistry\", label: \"Chemistry\" },\n    { value: \"Physics\", label: \"Physics\" },\n    { value: \"Science_(Biology)\", label: \"Science (Biology)\" },\n    { value: \"Science_(Chemistry)\", label: \"Science (Chemistry)\" },\n    { value: \"Science_(Physics)\", label: \"Science (Physics)\" },\n  ];\n  const examOptions = [\n    { value: \"Express\", label: \"Express\" },\n    { value: \"Normal_(Academic)\", label: \"Normal Academic\" },\n    { value: \"Normal_(Technical)\", label: \"Normal Technical\" },\n  ];\n  const [numberOfExams, setNumberOfExams] = useState(1);\n  const [subjects, setSubjects] = useState([\"\"]);\n  const [exams, setExams] = useState([\"\"]);\n  const handleAddExam = () => {\n    setNumberOfExams(numberOfExams + 1);\n    const subjectToAdd = [...subjects];\n    const examToAdd = [...exams];\n    subjectToAdd.push(\"\");\n    examToAdd.push(\"\");\n    setSubjects(subjectToAdd);\n    setExams(examToAdd);\n  };\n  const allExams = () => {\n    let number = [];\n    for (let i = 1; i <= numberOfExams; i++) {\n      number.push(i);\n    }\n    return number.map((element) => (\n      <>\n        <Grid item xs={6}>\n          <TextField\n            required\n            fullWidth\n            select\n            label=\"Subject\"\n            id=\"subject\"\n            value={subjects[element - 1]}\n            onChange={(e) => {\n              const toChange = [...subjects];\n              toChange[element - 1] = e.target.value;\n              setSubjects(toChange);\n            }}\n          >\n            {subjectOptions.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            required\n            fullWidth\n            select\n            label=\"Exam\"\n            value={exams[element - 1]}\n            onChange={(e) => {\n              const toChange = [...exams];\n              toChange[element - 1] = e.target.value;\n              setExams(toChange);\n            }}\n          >\n            {examOptions.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n      </>\n    ));\n  };\n  const handleFirstNameChange = (e) => {\n    dispatch(userActions.setFirstName(e.target.value));\n  };\n  const handleLastNameChange = (e) => {\n    dispatch(userActions.setLastName(e.target.value));\n  };\n  const handleUsernameChange = (e) => {\n    dispatch(userActions.setUsername(e.target.value));\n  };\n  const handleEmailChange = (e) => {\n    dispatch(userActions.setEmail(e.target.value));\n  };\n  const handlePhoneChange = (e) => {\n    dispatch(userActions.setPhone(e.target.value));\n  };\n  const handleSchoolChange = (e) => {\n    dispatch(userActions.setSchool(e.target.value));\n  };\n  const [password, setPassword] = useState(\"\");\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  const disableButton = () => {\n    return (\n      user.f_name === \"\" ||\n      user.l_name === \"\" ||\n      user.username === \"\" ||\n      user.phone === \"\" ||\n      user.email === \"\" ||\n      user.school === \"\" ||\n      // user.subjects === [] ||\n      user.password === \"\"\n    );\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //create account\n    const res = await axios.post(\"http://127.0.0.1:8000/students/new/\", {\n      first_name: user.f_name,\n      last_name: user.l_name,\n      username: `s_${user.username}`,\n      contact: user.phone,\n      email: user.email,\n      school: user.school,\n      subject: subjects,\n      exams: exams,\n      password: password,\n    });\n    console.log(res.data);\n    //generating relevant papers for student\n    const papers = [];\n    for (let i = 0; i < subjects.length; i++) {\n      const paper = await axios.get(\n        `http://127.0.0.1:8000/students/papers/${subjects[i]}/${exams[i]}/`\n      );\n      for (const element of paper.data) {\n        papers.push(element);\n      }\n    }\n    console.log(papers);\n    const studentPapers = [];\n    papers.map((paper) => {\n      studentPapers.push(paper.paper_id);\n    });\n    console.log(studentPapers);\n    //save exam papers into database\n    for (const paper of studentPapers) {\n      const savePapers = await axios.post(\n        \"http://127.0.0.1:8000/students/papers/\",\n        {\n          username: `s_${user.username}`,\n          paper_id: paper,\n        }\n      );\n    }\n    if (typeof res.data !== \"string\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <>\n      <header\n        style={{\n          backgroundColor: \"black\",\n          color: \"white\",\n          textAlign: \"center\",\n          padding: \"3vh\",\n          marginBottom: \"5vh\",\n          height: \"10vh\",\n        }}\n      >\n        TYS- STUDENT REGISTRATION\n      </header>\n      <Container sx={{ marginTop: \"10px\", marginBottom: \"10px\" }} maxWidth=\"sm\">\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <TextField\n              autoComplete=\"given-name\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First Name\"\n              autoFocus\n              value={user.f_name}\n              onChange={handleFirstNameChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              required\n              fullWidth\n              id=\"lastName\"\n              label=\"Last Name\"\n              name=\"lastName\"\n              autoComplete=\"family-name\"\n              value={user.l_name}\n              onChange={handleLastNameChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">s_</InputAdornment>\n                ),\n              }}\n              value={user.username}\n              onChange={handleUsernameChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"new-password\"\n              value={password}\n              onChange={handlePasswordChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              id=\"email\"\n              autoComplete=\"email\"\n              value={user.email}\n              onChange={handleEmailChange}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              disabled\n              fullWidth\n              label=\"Country Code\"\n              id=\"outlined-disabled\"\n              value=\"+65 (SGP)\"\n            />\n          </Grid>\n          <Grid item xs={9}>\n            <TextField\n              required\n              fullWidth\n              name=\"phone\"\n              label=\"Phone Number\"\n              type=\"number\"\n              id=\"phone\"\n              autoComplete=\"phone\"\n              value={user.phone}\n              onChange={handlePhoneChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              select\n              label=\"School\"\n              id=\"school\"\n              value={user.school}\n              onChange={handleSchoolChange}\n            >\n              {schools.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          {allExams()}\n        </Grid>\n        <Grid container justifyContent=\"flex-end\">\n          <IconButton\n            aria-label=\"subject\"\n            size=\"large\"\n            onClick={handleAddExam}\n            disabled={numberOfExams >= 3}\n          >\n            <AddCircleOutlineIcon />\n          </IconButton>\n        </Grid>\n        <Grid container justifyContent=\"center\" sx={{ marginTop: \"20px\" }}>\n          <Button\n            variant=\"outlined\"\n            // disabled={disableButton}\n            onClick={handleSubmit}\n          >\n            Register\n          </Button>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default StudentRegister;\n","/Users/qizhen/Desktop/tys_fe/src/components/PaperReview.js",["97"],"//must retrieve the accuracy of the questions to display the right or wrong\n\nimport React, { useState, useEffect } from \"react\";\nimport StudentNavBar from \"./StudentNavBar\";\nimport { Grid, Button } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst PaperReview = () => {\n  const params = useParams();\n  const user = useSelector((state) => state.user);\n  console.log(params); //params.paper = paper_id\n  //retrieve the score\n  const [result,setResult] = useState()\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:8000/students/paper/score/${user.username}/${params.paper}/`\n      )\n      .then((res) => {\n        console.log(res.data[0].results)\n        setResult(res.data[0].results)\n      });\n  });\n  const resultDisplay = (Math.round(result*10000)/100).toFixed(2)\n  console.log(resultDisplay)\n  //retrieve the questions for review\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:8000/students/review_papers/${user.username}/${params.paper}/`\n      )\n      .then((res) => {\n        setQuestions(res.data);\n      });\n  }, []);\n  console.log(questions[0]);\n  const displayQuestions = questions.map((question, index) => {\n    return (\n      <li style={{ marginBottom: \"10px\" }}>\n        <img src={question.question_img} alt={`question ${index + 1}`} />\n        <br />\n        Your answer:{\" \"}\n        <span style={{ textDecoration: \"underline\" }}>\n          {question.student_answer}\n        </span>{\" \"}\n        Correct answer:{\" \"}\n        <span style={{ textDecoration: \"underline\" }}>{question.answer}</span>{\" \"}\n        {question.accuracy ? (\n          <DoneIcon style={{ color: \"green\" }} />\n        ) : (\n          <CloseIcon style={{ color: \"red\" }} />\n        )}\n      </li>\n    );\n  });\n  return (\n    <>\n      <StudentNavBar />\n      <div\n        style={{\n          textAlign: \"center\",\n          margin: \"50px\",\n          fontWeight: \"bold\",\n          display: \"sticky\",\n        }}\n      >\n        {params.paper.split(\"_\")[0]} {params.paper.split(\"_\")[1]} {params.paper.split(\"_\")[2]}\n        <p style={{ fontWeight: \"normal\" }}>Score: {resultDisplay}%</p>\n      </div>\n      <div className=\"questions\">\n        <ol>\n          {displayQuestions}\n        </ol>\n      </div>\n      <Grid container justifyContent=\"center\">\n        <Button variant=\"outlined\" color=\"inherit\">\n          Book Consultation\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nexport default PaperReview;\n","/Users/qizhen/Desktop/tys_fe/src/redux/UserReducer.js",[],"/Users/qizhen/Desktop/tys_fe/src/components/StudentNavBar.js",[],"/Users/qizhen/Desktop/tys_fe/src/components/TutorNavBar.js",[],"/Users/qizhen/Desktop/tys_fe/src/components/StudentProfile.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":14,"column":10,"nodeType":"104","messageId":"105","endLine":14,"endColumn":21},{"ruleId":"102","severity":1,"message":"106","line":15,"column":10,"nodeType":"104","messageId":"105","endLine":15,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":28,"column":6,"nodeType":"109","endLine":28,"endColumn":8,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"111","line":9,"column":23,"nodeType":"104","messageId":"105","endLine":9,"endColumn":34},{"ruleId":"102","severity":1,"message":"112","line":3,"column":17,"nodeType":"104","messageId":"105","endLine":3,"endColumn":26},{"ruleId":"102","severity":1,"message":"113","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":13},{"ruleId":"102","severity":1,"message":"114","line":10,"column":10,"nodeType":"104","messageId":"105","endLine":10,"endColumn":15},{"ruleId":"102","severity":1,"message":"115","line":10,"column":17,"nodeType":"104","messageId":"105","endLine":10,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":54,"column":15,"nodeType":"118","endLine":54,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":12,"column":10,"nodeType":"104","messageId":"105","endLine":12,"endColumn":21},{"ruleId":"107","severity":1,"message":"119","line":26,"column":6,"nodeType":"109","endLine":26,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":78,"column":30,"nodeType":"123","messageId":"124","endLine":78,"endColumn":32},{"ruleId":"121","severity":1,"message":"122","line":111,"column":37,"nodeType":"123","messageId":"124","endLine":111,"endColumn":39},{"ruleId":"102","severity":1,"message":"125","line":124,"column":11,"nodeType":"104","messageId":"105","endLine":124,"endColumn":17},{"ruleId":"102","severity":1,"message":"126","line":125,"column":9,"nodeType":"104","messageId":"105","endLine":125,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":164,"column":24,"nodeType":"123","messageId":"124","endLine":164,"endColumn":26},{"ruleId":"102","severity":1,"message":"127","line":170,"column":13,"nodeType":"104","messageId":"105","endLine":170,"endColumn":23},{"ruleId":"107","severity":1,"message":"128","line":40,"column":6,"nodeType":"109","endLine":40,"endColumn":8,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSlider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.username'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'useSelector' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'paper' is assigned a value but never used.","'setPaper' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'params.paper'. Either include it or remove the dependency array.",["133"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'update' is assigned a value but never used.","'disableButton' is assigned a value but never used.","'savePapers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.paper' and 'user.username'. Either include them or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [user.username]",{"range":"141","text":"142"},"Update the dependencies array to be: [params.paper]",{"range":"143","text":"144"},"Update the dependencies array to be: [params.paper, user.username]",{"range":"145","text":"146"},[851,853],"[user.username]",[754,756],"[params.paper]",[1306,1308],"[params.paper, user.username]"]