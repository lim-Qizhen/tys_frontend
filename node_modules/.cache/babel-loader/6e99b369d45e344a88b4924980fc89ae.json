{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const userSlice = createSlice({\n  name: \"user\",\n  //store name\n  initialState: {\n    f_name: \"\",\n    l_name: \"\",\n    username: \"\",\n    password: \"\",\n    accessToken: \"\",\n    email: \"\",\n    phone: null,\n    school: \"\",\n    subjects: [],\n    exams: [],\n    is_tutor: false\n  },\n  reducers: {\n    setFirstName: (state, action) => {\n      state.f_name = action.payload;\n    },\n    setLastName: (state, action) => {\n      state.l_name = action.payload;\n    },\n    setUsername: (state, action) => {\n      state.username = action.payload;\n    },\n    setEmail: (state, action) => {\n      state.email = action.payload;\n    },\n    setPhone: (state, action) => {\n      state.phone = action.payload;\n    },\n    setSchool: (state, action) => {\n      state.school = action.payload;\n    },\n    setSubjects: (state, action) => {\n      state.subjects = action.payload;\n    },\n    setTutor: (state, action) => {\n      state.f_name = action.payload;\n    },\n    loginSuccess: (state, action) => {\n      state.name = action.payload.name;\n      state.address = action.payload.address;\n      state.country = action.payload.country;\n      state.postal = action.payload.postal;\n      state.email = action.payload.email;\n      state.accessToken = action.payload.accessToken;\n      state.phone = action.payload.phone;\n      state.id = action.payload._id; //state is like the actual thing, action.payload is like what you put in\n    },\n    registerSuccess: (state, action) => {\n      state.name = action.payload.name;\n      state.address = action.payload.address;\n      state.country = action.payload.country;\n      state.postal = action.payload.postal;\n      state.email = action.payload.email;\n      state.phone = action.payload.phone;\n      state.id = action.payload._id;\n    },\n    logout: state => {\n      state.fname = \"\";\n      state.lname = \"\";\n      state.address = \"\";\n      state.email = \"\";\n      state.accessToken = \"\";\n      state.country = \"\";\n      state.postal = \"\";\n      state.countryCode = \"\";\n      state.phone = null;\n      state.password = \"\";\n    }\n  }\n});\nexport const userActions = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/qizhen/Desktop/tys_frontend/src/redux/UserReducer.js"],"names":["createSlice","userSlice","name","initialState","f_name","l_name","username","password","accessToken","email","phone","school","subjects","exams","is_tutor","reducers","setFirstName","state","action","payload","setLastName","setUsername","setEmail","setPhone","setSchool","setSubjects","setTutor","loginSuccess","address","country","postal","id","_id","registerSuccess","logout","fname","lname","countryCode","userActions","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\", //store name\n  initialState: {\n    f_name: \"\",\n    l_name: \"\",\n    username: \"\",\n    password: \"\",\n    accessToken: \"\",\n    email: \"\",\n    phone: null,\n    school: \"\",\n    subjects: [],\n    exams: [],\n    is_tutor: false,\n  },\n  reducers: {\n    setFirstName: (state, action) => {\n      state.f_name = action.payload;\n    },\n    setLastName: (state, action) => {\n      state.l_name = action.payload;\n    },\n    setUsername: (state, action) => {\n      state.username = action.payload;\n    },\n    setEmail: (state, action) => {\n      state.email = action.payload;\n    },\n    setPhone: (state, action) => {\n      state.phone = action.payload;\n    },\n    setSchool: (state, action) => {\n      state.school = action.payload;\n    },\n    setSubjects: (state, action) => {\n      state.subjects = action.payload;\n    },\n    setTutor: (state, action) => {\n      state.f_name = action.payload;\n    },\n    loginSuccess: (state, action) => {\n      state.name = action.payload.name;\n      state.address = action.payload.address;\n      state.country = action.payload.country;\n      state.postal = action.payload.postal;\n      state.email = action.payload.email;\n      state.accessToken = action.payload.accessToken;\n      state.phone = action.payload.phone;\n      state.id = action.payload._id;\n      //state is like the actual thing, action.payload is like what you put in\n    },\n    registerSuccess: (state, action) => {\n      state.name = action.payload.name;\n      state.address = action.payload.address;\n      state.country = action.payload.country;\n      state.postal = action.payload.postal;\n      state.email = action.payload.email;\n      state.phone = action.payload.phone;\n      state.id = action.payload._id;\n    },\n    logout: (state) => {\n      state.fname = \"\";\n      state.lname = \"\";\n      state.address = \"\";\n      state.email = \"\";\n      state.accessToken = \"\";\n      state.country = \"\";\n      state.postal = \"\";\n      state.countryCode = \"\";\n      state.phone = null;\n      state.password = \"\";\n    },\n  },\n});\n\nexport const userActions = userSlice.actions;\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}